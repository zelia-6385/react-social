{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","styles","dialog","to","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","elem","key","messagesElements","messages","dialogs_items","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uGCgBtMC,EAZI,SAACC,GAChB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACI,yBAAKC,UAAWC,IAAOC,QACnB,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAOI,QACtCR,EAAMS,QCJRC,EAJC,SAACV,GACb,OAAO,yBAAKG,UAAWC,IAAOO,SAAUX,EAAMW,U,iCC+B5CC,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAlBL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,yBAGpB,6BACI,6CAUDC,EAlDC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACpC,kBAAC,EAAD,CAAYtB,KAAMsB,EAAKtB,KAAMP,GAAI6B,EAAK7B,GAAI8B,IAAKD,EAAK7B,QAGpD+B,EAAmBP,EAAMQ,SAASJ,KAAI,SAACC,GAAD,OACtC,kBAAC,EAAD,CAASpB,QAASoB,EAAKpB,QAASqB,IAAKD,EAAK7B,QAO9C,OACI,yBAAKC,UAAWC,IAAOyB,SACnB,yBAAK1B,UAAWC,IAAO+B,eAAgBP,GACvC,yBAAKzB,UAAWC,IAAO8B,UACnB,6BAAMD,IAEV,kBAACnB,EAAD,CAAqBG,SAVP,SAACmB,GACnBpC,EAAMqC,YAAYD,EAAOE,qB,wCCjB7BC,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,S,OCwBRE,sBACXC,aAtBkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,eAoBE,CACrBU,mBDvBwB,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK9C,MAAMwC,OACT,kBAACI,EAAcE,KAAK9C,OADI,kBAAC,IAAD,CAAUM,GAAI,eAHV,GACXyC,IAAMH,WAStC,OAFqCD,YAAQJ,EAARI,CAAoCE,KCa9DH,CAKbjB","file":"static/js/4.1e27759a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__yy4Nf\",\"dialogs_items\":\"Dialogs_dialogs_items__3g5AN\",\"dialog\":\"Dialogs_dialog__2Bswv\",\"active\":\"Dialogs_active__3dFq8\",\"messages\":\"Dialogs_messages__1SfaU\",\"message\":\"Dialogs_message__12scP\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from '../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    const path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path} activeClassName={styles.active}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport styles from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={styles.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport styles from './Dialogs.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((elem) => (\r\n        <DialogItem name={elem.name} id={elem.id} key={elem.id} />\r\n    ));\r\n\r\n    let messagesElements = state.messages.map((elem) => (\r\n        <Message message={elem.message} key={elem.id} />\r\n    ));\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogs_items}>{dialogsElements}</div>\r\n            <div className={styles.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Enter your messages\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm',\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n","// import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { sendMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\n// compose(\r\n//     connect(mapStateToProps, {\r\n//         updateNewMessageBody,\r\n//         sendMessage,\r\n//     }),\r\n//     withAuthRedirect,\r\n// )(Dialogs)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, {\r\n//     updateNewMessageBody,\r\n//     sendMessage,\r\n// })(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        sendMessage,\r\n    }),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n"],"sourceRoot":""}