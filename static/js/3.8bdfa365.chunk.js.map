{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","styles","description_block","src","photos","large","alt","Preloader","Post","item","likesCount","message","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","map","elem","key","id","posts_block","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Profile","PropfileContainer","userId","this","match","params","authorisedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8bdfa365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description_block\":\"ProfileInfo_description_block__2tIfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__1HRne\",\"posts\":\"MyPosts_posts__4LGs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2x5Yr\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n                </div>\r\n            )}\r\n\r\n            {editMode && (\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n// import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.description_block}>\r\n                <img src={profile.photos.large} alt=\"profile_photo\" />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRdiwTYiTz_QaKctS1RstEbfxz8hYnlMTx5tQ&usqp=CAU\"\r\n                alt=\"avatar\"\r\n            />\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"newPostText\"\r\n                    component={Textarea}\r\n                    placeholder=\"add post\"\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n    form: 'ProfileaddNewPostForm',\r\n})(AddNewPostForm);\r\n\r\n// class MyPosts extends React.PureComponent {\r\n//     // shouldComponentUpdate(nextProps, nextState) {\r\n//     //     return nextProps !== this.props || nextState !== this.state;\r\n//     // }\r\n//     render() {\r\n//         console.log('RENDER');\r\n\r\n//         let postsElements = this.props.posts.map((elem) => (\r\n//             <Post message={elem.message} likesCount={elem.likesCount} key={elem.id} />\r\n//         ));\r\n\r\n//         const onAddPost = (values) => {\r\n//             this.props.addPost(values.newPostText);\r\n//         };\r\n\r\n//         return (\r\n//             <div className={styles.posts_block}>\r\n//                 <h3>My posts</h3>\r\n//                 <AddNewPostFormRedux onSubmit={onAddPost} />\r\n//                 <div className={styles.posts}>{postsElements}</div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    console.log('RENDER');\r\n\r\n    let postsElements = props.posts.map((elem) => (\r\n        <Post message={elem.message} likesCount={elem.likesCount} key={elem.id} />\r\n    ));\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.posts_block}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={styles.posts}>{postsElements}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","// import React from 'react';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nimport MyPosts from './MyPosts';\r\n// import StoreContext from '../../../StoreContext';\r\n\r\n// const MyPostsContainer = (props) => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState();\r\n\r\n//                 const addPost = () => {\r\n//                     store.dispatch(addPostActionCreator());\r\n//                 };\r\n\r\n//                 const onPostChange = (text) => {\r\n//                     let action = updateNewPostTextActionCreator(text);\r\n//                     store.dispatch(action);\r\n//                 };\r\n\r\n//                 return (\r\n//                     <MyPosts\r\n//                         updateNewPostText={onPostChange}\r\n//                         addPost={addPost}\r\n//                         posts={state.profilePage.posts}\r\n//                         newPostText={state.profilePage.newPostText}\r\n//                     />\r\n//                 );\r\n//             }}\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         updateNewPostText: (text) => {\r\n//             let action = updateNewPostTextActionCreator(text);\r\n//             dispatch(action);\r\n//         },\r\n\r\n//         addPost: () => {\r\n//             dispatch(addPostActionCreator());\r\n//         },\r\n//     };\r\n// };\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n// import styles from './Profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass PropfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n    }),\r\n    withRouter,\r\n    // withAuthRedirect,\r\n)(PropfileContainer);\r\n"],"sourceRoot":""}